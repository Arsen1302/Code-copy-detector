class Solution:
    def solution_38_5(self, s: str) -> bool:
        # Initialize two pointer variables, left and right and point them with the two ends of the input string...
        left, right = 0, len(s) - 1
        # Traverse all elements through the loop...
        while left < right:
            # Move the left pointer to right so it points to a alphanumeric character...
            while left < right and not s[left].isalnum():
                left += 1
            # Similarly move right pointer to left so it also points to a alphanumeric character...
            while left < right and not s[right].isalnum():
                right -= 1
            # Check if both the characters are same...
            # If it is not equal then the string is not a valid palindrome, hence return false...
            if s[left].lower() != s[right].lower():
                return False
            # If same, then continue to next iteration and move both pointers to point to next alphanumeric character till left < right...
            left, right = left + 1, right - 1
        # After loop finishes, the string is said to be palindrome, hence return true...
        return True